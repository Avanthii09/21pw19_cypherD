{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8080';\nclass ApiService {\n  constructor() {\n    this.client = axios.create({\n      baseURL: API_BASE_URL,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n  }\n\n  // Wallet operations\n  async createWallet(address) {\n    const response = await this.client.post('/api/wallets', {\n      address\n    });\n    return response.data;\n  }\n  async getBalance(address) {\n    const response = await this.client.get('/api/balance', {\n      params: {\n        address\n      }\n    });\n    return response.data;\n  }\n\n  // Transfer operations\n  async initiateTransfer(transferData) {\n    const response = await this.client.post('/api/transfer/initiate', transferData);\n    return response.data;\n  }\n  async approveTransfer(approvalData) {\n    const response = await this.client.post('/api/transfer/approve', approvalData);\n    return response.data;\n  }\n  async getTransactions(address) {\n    const response = await this.client.get('/api/transactions', {\n      params: {\n        address\n      }\n    });\n    return response.data;\n  }\n\n  // Price operations\n  async getPriceQuote(amountUsd) {\n    const response = await this.client.post('/api/price/quote', {\n      amount_usd: amountUsd\n    });\n    return response.data;\n  }\n\n  // Notification operations\n  async sendNotification(notificationData) {\n    const response = await this.client.post('/api/notify', notificationData);\n    return response.data;\n  }\n}\nconst apiService = new ApiService();\nexport default apiService;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","ApiService","constructor","client","create","baseURL","headers","createWallet","address","response","post","data","getBalance","get","params","initiateTransfer","transferData","approveTransfer","approvalData","getTransactions","getPriceQuote","amountUsd","amount_usd","sendNotification","notificationData","apiService"],"sources":["/Users/avanthikarammohan/Documents/mock-web3-wallet/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8080';\r\n\r\nclass ApiService {\r\n  constructor() {\r\n    this.client = axios.create({\r\n      baseURL: API_BASE_URL,\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n  }\r\n\r\n  // Wallet operations\r\n  async createWallet(address) {\r\n    const response = await this.client.post('/api/wallets', { address });\r\n    return response.data;\r\n  }\r\n\r\n  async getBalance(address) {\r\n    const response = await this.client.get('/api/balance', {\r\n      params: { address }\r\n    });\r\n    return response.data;\r\n  }\r\n\r\n  // Transfer operations\r\n  async initiateTransfer(transferData) {\r\n    const response = await this.client.post('/api/transfer/initiate', transferData);\r\n    return response.data;\r\n  }\r\n\r\n  async approveTransfer(approvalData) {\r\n    const response = await this.client.post('/api/transfer/approve', approvalData);\r\n    return response.data;\r\n  }\r\n\r\n  async getTransactions(address) {\r\n    const response = await this.client.get('/api/transactions', {\r\n      params: { address }\r\n    });\r\n    return response.data;\r\n  }\r\n\r\n  // Price operations\r\n  async getPriceQuote(amountUsd) {\r\n    const response = await this.client.post('/api/price/quote', {\r\n      amount_usd: amountUsd\r\n    });\r\n    return response.data;\r\n  }\r\n\r\n  // Notification operations\r\n  async sendNotification(notificationData) {\r\n    const response = await this.client.post('/api/notify', notificationData);\r\n    return response.data;\r\n  }\r\n}\r\n\r\nconst apiService = new ApiService();\r\nexport default apiService;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;AAE7E,MAAMC,UAAU,CAAC;EACfC,WAAWA,CAAA,EAAG;IACZ,IAAI,CAACC,MAAM,GAAGP,KAAK,CAACQ,MAAM,CAAC;MACzBC,OAAO,EAAER,YAAY;MACrBS,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;EACJ;;EAEA;EACA,MAAMC,YAAYA,CAACC,OAAO,EAAE;IAC1B,MAAMC,QAAQ,GAAG,MAAM,IAAI,CAACN,MAAM,CAACO,IAAI,CAAC,cAAc,EAAE;MAAEF;IAAQ,CAAC,CAAC;IACpE,OAAOC,QAAQ,CAACE,IAAI;EACtB;EAEA,MAAMC,UAAUA,CAACJ,OAAO,EAAE;IACxB,MAAMC,QAAQ,GAAG,MAAM,IAAI,CAACN,MAAM,CAACU,GAAG,CAAC,cAAc,EAAE;MACrDC,MAAM,EAAE;QAAEN;MAAQ;IACpB,CAAC,CAAC;IACF,OAAOC,QAAQ,CAACE,IAAI;EACtB;;EAEA;EACA,MAAMI,gBAAgBA,CAACC,YAAY,EAAE;IACnC,MAAMP,QAAQ,GAAG,MAAM,IAAI,CAACN,MAAM,CAACO,IAAI,CAAC,wBAAwB,EAAEM,YAAY,CAAC;IAC/E,OAAOP,QAAQ,CAACE,IAAI;EACtB;EAEA,MAAMM,eAAeA,CAACC,YAAY,EAAE;IAClC,MAAMT,QAAQ,GAAG,MAAM,IAAI,CAACN,MAAM,CAACO,IAAI,CAAC,uBAAuB,EAAEQ,YAAY,CAAC;IAC9E,OAAOT,QAAQ,CAACE,IAAI;EACtB;EAEA,MAAMQ,eAAeA,CAACX,OAAO,EAAE;IAC7B,MAAMC,QAAQ,GAAG,MAAM,IAAI,CAACN,MAAM,CAACU,GAAG,CAAC,mBAAmB,EAAE;MAC1DC,MAAM,EAAE;QAAEN;MAAQ;IACpB,CAAC,CAAC;IACF,OAAOC,QAAQ,CAACE,IAAI;EACtB;;EAEA;EACA,MAAMS,aAAaA,CAACC,SAAS,EAAE;IAC7B,MAAMZ,QAAQ,GAAG,MAAM,IAAI,CAACN,MAAM,CAACO,IAAI,CAAC,kBAAkB,EAAE;MAC1DY,UAAU,EAAED;IACd,CAAC,CAAC;IACF,OAAOZ,QAAQ,CAACE,IAAI;EACtB;;EAEA;EACA,MAAMY,gBAAgBA,CAACC,gBAAgB,EAAE;IACvC,MAAMf,QAAQ,GAAG,MAAM,IAAI,CAACN,MAAM,CAACO,IAAI,CAAC,aAAa,EAAEc,gBAAgB,CAAC;IACxE,OAAOf,QAAQ,CAACE,IAAI;EACtB;AACF;AAEA,MAAMc,UAAU,GAAG,IAAIxB,UAAU,CAAC,CAAC;AACnC,eAAewB,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}